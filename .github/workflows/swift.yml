name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

#     runs-on: macos-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Build
#       run: swift build -v
#     - name: Run tests
#       run: swift test -v
#     build:
    runs-on: macos-latest
    strategy:
      matrix:
        run-config:
          - { scheme: 'cobatest', destination: 'platform=iOS Simulator,OS=13.4.1,name=iPhone 8' }
#           - { scheme: 'MPCF-Reflector-mac', destination: 'platform=macOS' }
#           - { scheme: 'MPCF-TestRunner-mac', destination: 'platform=macOS' }
#           - { scheme: 'MPCF-TestRunner-ios', destination: 'platform=iOS Simulator,OS=13.4.1,name=iPhone 8' }
#           - { scheme: 'MPCF-Reflector-tvOS', destination: 'platform=tvOS Simulator,OS=13.4,name=Apple TV' }
    steps:
      - name: build and test
        run: xcodebuild clean test -scheme '${{ matrix.run-config['scheme'] }}' -destination '${{ matrix.run-config['destination'] }}' -showBuildTimingSummary
#     - name: Checkout Project
#       uses: actions/checkout@v1
#     - name: Homebrew build helpers install
#       run: brew bundle
#     - name: Show the currently detailed version of Xcode for CLI
#       run: xcode-select -p
#     - name: Show Build Settings
#       run: xcodebuild -workspace MPCF-TestBench.xcworkspace -scheme '${{ matrix.run-config['scheme'] }}' -showBuildSettings
#     - name: Show Available Destinations
#       run: xcodebuild -workspace MPCF-TestBench.xcworkspace -scheme '${{ matrix.run-config['scheme'] }}' -showdestinations
#     - name: lint
#       run: swift format lint --configuration .swift-format-config -r .
#     - name: build and test
#       run: xcodebuild clean test -scheme '${{ matrix.run-config['scheme'] }}' -destination '${{ matrix.run-config['destination'] }}' -showBuildTimingSummary
